(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{569:function(s,t,a){"use strict";a.r(t);var n=a(4),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"分布式锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分布式锁"}},[s._v("#")]),s._v(" 分布式锁")]),s._v(" "),a("h3",{attrs:{id:"jvm单机锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jvm单机锁"}},[s._v("#")]),s._v(" JVM单机锁")]),s._v(" "),a("p",[s._v("比如"),a("code",[s._v("synchronized")]),s._v("，基于JVM，只针对一个java程序，不适用集群部署的服务")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[s._v("\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("synchronized")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 处理逻辑")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h3",{attrs:{id:"redis的setnx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis的setnx"}},[s._v("#")]),s._v(" Redis的SetNX")]),s._v(" "),a("p",[s._v("适用Redis存储锁，使用时获取")]),s._v(" "),a("p",[s._v("RedisConnection以"),a("code",[s._v("NX")]),s._v("结尾的方法：即判断Redis是否存储锁的值，没有并设置成功，返回true；已存在返回false")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" lockKey "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"product_001"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 比如这个方法，setIfAbsent，内部就是调用RedisConnection的setNX")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Boolean")]),s._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" stringRedisTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("opsForValue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setIfAbsent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("lockKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"testValue"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("TimeUnit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("SECONDS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("result"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 代表已经加锁了")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 处理逻辑")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("finally")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 释放锁")]),s._v("\n    stringRedisTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("delete")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("lockKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[s._v("同时这里避免死锁的处理方式：")]),s._v(" "),a("ul",[a("li",[s._v("加上"),a("code",[s._v("try{}finally{}")])]),s._v(" "),a("li",[a("code",[s._v("setIfAbsent")]),s._v("方法选用有过期时间参数的")])]),s._v(" "),a("p",[s._v("但这里避免死锁的方式，获取锁和删除锁是2个操作，非原子性操作，只适合并发量中等的")]),s._v(" "),a("h3",{attrs:{id:"redisson工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redisson工具"}},[s._v("#")]),s._v(" Redisson工具")]),s._v(" "),a("p",[s._v("上述Redis2个操作，进一步优化，就是Lua脚本的原子性操作，Redisson工具就是封装redis命令接口，内部操作大部分基于Lua脚本执行的。")]),s._v(" "),a("p",[s._v("源码参见："),a("code",[s._v("RLock")]),s._v("接口的各种实现类")]),s._v(" "),a("h3",{attrs:{id:"zookeeper分布式锁"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper分布式锁"}},[s._v("#")]),s._v(" Zookeeper分布式锁")]),s._v(" "),a("p",[s._v("集群情况下，先同步集群节点，再通知客户端处理结果")]),s._v(" "),a("p",[s._v("源码参见："),a("code",[s._v("InterProcessLock")]),s._v("接口的各种实现类")]),s._v(" "),a("h3",{attrs:{id:"选择和优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选择和优化"}},[s._v("#")]),s._v(" 选择和优化")]),s._v(" "),a("p",[s._v("Redis是CAP原则（一致性、可用性、分区容错性）的AP类型，优先保证可用性")]),s._v(" "),a("p",[s._v("Zookeeper是CAP原则（一致性、可用性、分区容错性）的CP类型，优先保证一致性")]),s._v(" "),a("p",[s._v("并发量高，优先Redis。虽然是单线程，等于并发变成串行排队处理。但一般不用担心性能。")]),s._v(" "),a("p",[s._v("提升性能，可将逻辑处理分段，采用分段加锁思想优化")])])}),[],!1,null,null,null);t.default=e.exports}}]);